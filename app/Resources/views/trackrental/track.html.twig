{%extends '::base.html.twig'%}

{% block stylesheets_extra %} 
<style>
#table1 tr:first-child td {
    background-color: #DDD;
    font-size: 14px;
    font-weight: 400;
    color: #666;
}
</style>
{% endblock %}


{% block body %}

    <div class="row">
    <div id="table1" class="table-responsive col-lg-8">
        <table class="table table-striped table-bordered table-hover"></table>

    </div>

    <div class="col-lg-4">
       <!-- BEGIN SAMPLE FORM PORTLET-->
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption font-red-sunglo">
                        <i class="fa fa-plus" style="color:#E26A6A;"></i>
                        <span class="caption-subject bold uppercase"> New Register</span>
                    </div>
                </div>
                <div class="portlet-body form">
                    {{ form_start(form) }}
                    {{ form_widget(form) }}
                    <br>
                    <button type="button" class="btn default"  id="clear">Clear</button>
   
                    <button id="btn_addfield" type="submit" class="btn blue">Add Financial Field</button>
                 
                    {{ form_end(form) }}
                    <br>
                    <div class="form-actions">
                    </div>
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->
        </div>
      
        <br><br>

    </div>
    <div>
{%endblock%}

{% block javascripts_extra %} 
    <script>
    
    function formula(matriz){
          return x
    }
    
    
    
    /*funcion que elabora matriz de totales*/
    function totales(){
                 var matriz = [];
                 var lastrow=$(".table tr:last td:first").text()-2;
                 for(i=2;i<lastrow;i++){
                  for(j=0;j<12;j++){
                      var casilla=String.fromCharCode(65+j)+i;
                          matriz.push(localStorage.getItem(casilla));
                       }
                 }
          console.log(matriz);
          
          //generando totales
          
          $(".table tr:last td").each(function(index){
               var letra_col=String.fromCharCode(65+index);
             //  var casilla_neg=letra_col+(lastrow);//la casilla de total negativo
             //  var casilla_pos=letra_col+(lastrow+1);//la casilla de total positivo
               var casilla_total=letra_col+(lastrow+2);//la casilla de total general
               var sigma='=';
               for(i=2;i<=lastrow;i++) sigma+="+"+letra_col+i;
               localStorage.setItem(casilla_total,sigma);
               $(this).trigger('click');
        });
          
          //calcular las formulas desde el storage recursivamente
        /*var filas=lastrow-2;
           for(c=0;c<13;c++){//recorro las columnas y las sumo
            var total_col=0;
              for(f=0;f<filas;f++){
                total_col+=parseFloat(matriz[c+f*12]);
              }
              var casilla=String.fromCharCode(65+c)+"6";
              $("span#"+casilla).html('<strong>'+ parseFloat(total_col)+'</strong>');
        }//fin recorro las col
          */
          
        /*
        $(".table tr").each(function(i) {
            
            var arrayOfThisRow = [];
            var tableData = $(this).find('td');
            tableData.each(function(j) { 
            var casilla=String.fromCharCode(65+i)+j;
            
             arrayOfThisRow.push( localStorage.getItem(casilla) );
            });
              myTableArray.push(arrayOfThisRow);
        });

            console.log(myTableArray);
*/       
        }
       
        
        
        var objects='{{ objects}}'; // viene del controlador

        jsonStr = objects.replace(/&quot;/g, '"'); //arreglar comillas dobles
        var obj = JSON.parse(jsonStr); //convertir a jsonArray
        console.log(obj);
    /*for (var i = 0; i <= obj.length; i++){
                obj.splice(i,1); 
        }
*/
        var months =['Jan','Feb','Mar','Apr','May', 'Jun', 'Jul', 'Ago','Sep', 'Oct', 'Nov','Dic', 'Total'];

        var row = document.querySelector("table").insertRow(-1);
        for (var j = 0; j <= 13; j++) { //cols
            var letter = String.fromCharCode("A".charCodeAt(0) + j - 1);
             if (j==0)row.insertCell(-1).outerHTML = '&nbsp; ';
             row.insertCell(-1).innerHTML =  letter;
        }

        var row = document.querySelector("table").insertRow(-1);
        for (var j = 0; j <= 13; j++) { //cols
            if(j==0) row.insertCell(-1).outerHTML = '&nbsp; ';
            row.insertCell(j).innerHTML =  j>0 ? months[j - 1] :"1" ;
        }

        for (var i = 0; i <= obj.length+1; i++) { //rows
            var row = document.querySelector("table").insertRow(-1);
            if(i>1) row.insertCell(-1).outerHTML = obj[i-2].description+'&nbsp;&nbsp;&nbsp;&nbsp';

            for (var j = 0; j <= 13; j++) { //cols
                var letter = String.fromCharCode("A".charCodeAt(0) + j - 1);
                if (i>1) row.insertCell(-1).innerHTML = i && j? "<input param='"+ obj[i-2].id+"' id='" + letter + i + "'/>" : i || letter;
            }
            
            
        }
        
       var k=0;
       var total_label=Array();
       total_label[0]= 'Total Income';
       total_label[1]= 'Total Outcome';
       total_label[2]= 'Total ';
       
        for (var i = obj.length+2; i<obj.length+5; i++) { //rows
            var row = document.querySelector("table").insertRow(-1);
            row.insertCell(-1).outerHTML = '<strong>'+total_label[k]+'&nbsp;&nbsp;&nbsp;&nbsp; </strong>';
            k++;
            for (var j = 0; j <= 13; j++) { //cols
                var letter = String.fromCharCode("A".charCodeAt(0) + j - 1);
                row.insertCell(-1).innerHTML = i && j? "<strong><input id='" + letter + i + "'/></strong>" : i || letter;
            }
            
            
        }
        //agregando SubTotal outcome
        //agregando SubTotal income
        //agregando Total income-outcome
        
        

        var DATA = {}, INPUTS = [].slice.call(document.querySelectorAll(".table input"));
        INPUTS.forEach(function (elm) {
            elm.onfocus = function (e) {
                e.target.value = localStorage[e.target.id] || "";
            };
            elm.onblur = function (e) {
                localStorage[e.target.id] = e.target.value;
                computeAll(e.target.id);
            };
            var getter = function () {
                var value = localStorage[elm.id] || "";
                if (value.charAt(0) == "=") {
                    with (DATA)
                        return eval(value.substring(1));
                } else {
                    return isNaN(parseFloat(value)) ? value : parseFloat(value);
                }
            };
            Object.defineProperty(DATA, elm.id, {get: getter});
            Object.defineProperty(DATA, elm.id.toLowerCase(), {get: getter});
        });
         
        (window.computeAll = function (clicked) {
            
            INPUTS.forEach(function (elm) {
                try {
                    elm.value = DATA[elm.id];
                    if(clicked==elm.id)   $.post( "{{ path('ajax_trackrental_create') }}",{
                                                    mes:elm.id.charCodeAt(0)-64, 
                                                    valor:elm.value, 
                                                    id_rental: {{app.request.attributes.get('id')}}, 
                                                    id_fieldsrental:$("input#"+elm.id).attr('param') 
                                            });
                } catch (e) {
                }
            });
        })();
 $( document ).ready(function() {
     
     
        totales();
    
        $('#btn_addfield').click(function(e) {
                 e.preventDefault();
                desc=$("#fields_rental_description").val();
                wg=$("#fields_rental_widget option:selected").val();
                 $.post( "{{ path('ajax_fieldstrackrental_create') }}",{ description: desc, widget: wg, id_rental: {{app.request.attributes.get('id')}}})
                         .done(function( resp){
                              $('form[name="{{ form.vars.name }}"]').trigger("reset");
                            location.reload();
                          });
                });
        
        
        $('#clear').click(function() {
                 $('form[name="{{ form.vars.name }}"]').trigger("reset");
                 $('span').removeClass("checked");
             });
             
             
             $("select#fields_rental_widget").val('Currency');
             $("select#fields_rental_widget").hide();
             $("label[for=fields_rental_widget] ").hide();
             $(".numeric").numeric({ decimal : ".",  negative : false, scale: 4 });
               $(".currency").maskMoney();
               
               //$("td").css("text-align","right");
               $("textarea").css("border","none");
               $("td input").css("text-align","right");
               $("td input").css("border","none");
               /*cuando cambie un input guardo en Base de datos track col = date month*/
              $("td input").focusout(function() {
                var mes=$(this).prop('id').charCodeAt(0)-64; //obtengo el mes Enero=1
                var field=$(this).attr('param');
                });
                
 });
    </script>
{% endblock %}

